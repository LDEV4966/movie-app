{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","itemIndex","slice","Home","isLoading","movies","getMovie","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","props","history","undefined","location","push","Navigation","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"6TAoDeA,MA/Cf,YAA8D,IAA5CC,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAChD,OACI,qBAAKC,UAAU,QAAf,SACI,eAAC,IAAD,CACIC,GAAM,CACFC,SAAQ,iBAAaR,GACrBS,MAAQ,CACJT,GAAIA,EACJC,KAAOA,EACPC,MAAQA,EACRC,QAAUA,EACVC,OAASA,EACTC,OAASA,IATrB,UAaA,qBAAKC,UAAY,gBAAjB,SACI,qBAAKI,IAAON,EAAQO,IAAOT,EAAOA,MAAOA,MAE7C,sBAAKI,UAAY,cAAjB,UACI,qBAAIA,UAAY,eAAhB,cAAiCJ,EAAjC,OACA,qBAAII,UAAY,cAAhB,cAAgCL,EAAhC,OACA,oBAAIK,UAAY,gBAAhB,SAEID,EAAOO,KAAI,SAACC,EAAMC,GACd,OACA,oBAAsBR,UAAY,eAAlC,SAAkDO,GAAvCC,QAKnB,oBAAGR,UAAY,iBAAf,cAAkCH,EAAQY,MAAM,EAAE,KAAlD,mBCmBDC,G,kNAjDbP,MAAQ,CACNQ,WAAY,EACZC,OAAS,I,EAEXC,S,sBAAW,8BAAAC,EAAA,sEAKCC,IAAMC,IAAI,4DALX,gBAGIJ,EAHJ,EAEPK,KACEA,KAASL,OAGb,EAAKM,SAAS,CAACN,OAAOA,EAASD,WAAY,IANlC,2C,kEAUTQ,KAAKN,a,+BAEE,IAAD,EACyBM,KAAKhB,MAA5BQ,EADF,EACEA,UAAYC,EADd,EACcA,OACpB,OACA,yBAASZ,UAAY,YAArB,SACGW,EACC,qBAAKX,UAAY,SAAjB,SACE,sBAAMA,UAAY,eAAlB,0BAGA,qBAAKA,UAAY,SAAjB,SAEEY,EAAON,KAAI,SAAAc,GAET,GAAqB,KAAlBA,EAAMvB,QAIX,OAAO,cAAC,EAAD,CAEPH,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAUqB,EAAMrB,QANTqB,EAAM1B,e,GAnCN4B,IAAMC,YCsBVC,E,kLAvBS,IAAD,EACgBL,KAAKM,MAA5BC,EADO,EACPA,aACeC,IAFR,EACGC,SACLzB,OACTuB,EAAQG,KAAK,O,+BAIX,IAEED,EAAaT,KAAKM,MAAlBG,SACP,OAAIA,EAASzB,MAEN,8BACI,+BAAOyB,EAASzB,MAAMP,UAKvB,S,GApBE0B,IAAMC,W,MCMZO,MALf,WACI,OAAO,qBAAK9B,UAAU,MAAf,SACH,cAAC,IAAD,CAAMC,GAAK,IAAX,qBCQO8B,MARf,WACE,OAAO,eAAC,IAAD,WACL,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAO,IAAIC,UAAavB,EAAOwB,OAAS,IAC/C,cAAC,IAAD,CAAOF,KAAO,aAAaC,UAAaT,QCN5CW,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.71b3404e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie ({ id, year, title, summary, poster, genres }){\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link\r\n                to = {{\r\n                    pathname : `/movie/${id}`,\r\n                    state : {\r\n                        id :id,\r\n                        year : year,\r\n                        title : title,\r\n                        summary : summary,\r\n                        poster : poster,\r\n                        genres : genres\r\n                    }\r\n                }}\r\n            >\r\n            <div className = \"movie__poster\">\r\n                <img src = {poster} alt = {title} title={title}/>\r\n            </div>\r\n            <div className = \"movie__data\">\r\n                <h3 className = \"movie__title\"> {title} </h3>\r\n                <h4 className = \"movie__year\"> {year} </h4>\r\n                <ul className = \"movie__genres\">\r\n                {\r\n                    genres.map((genre,itemIndex )=> {\r\n                        return(\r\n                        <li key = {itemIndex} className = \"movie__genre\">{genre}</li>\r\n                        );\r\n                    })\r\n                }\r\n                </ul>\r\n                <p className = \"movie__summary\"> {summary.slice(0,180)}... </p>\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading : true ,\r\n    movies : []\r\n  };\r\n  getMovie = async () =>{\r\n    const {\r\n      data:{\r\n        data : { movies }\r\n      }\r\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({movies:movies , isLoading : false});\r\n    \r\n  }\r\n  componentDidMount(){\r\n    this.getMovie();\r\n  }\r\n  render(){\r\n    const { isLoading , movies } = this.state;\r\n    return (\r\n    <section className = \"container\">\r\n      {isLoading ? (\r\n        <div className = \"loader\">\r\n          <span className = \"loader__text\">Loading...</span>\r\n        </div> \r\n        ) : ( \r\n          <div className = \"movies\">\r\n          {\r\n            movies.map(movie => {\r\n\r\n              if(movie.summary === \"\"){\r\n                // eslint-disable-next-line\r\n                return;\r\n              }\r\n            return <Movie \r\n            key = {movie.id} \r\n            id={movie.id} \r\n            year={movie.year} \r\n            title={movie.title} \r\n            summary={movie.summary} \r\n            poster={movie.medium_cover_image}\r\n            genres = {movie.genres}\r\n            />})\r\n          }\r\n          </div>\r\n      )}\r\n    </section>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n\r\n// React는 가상 dom 을 이용해 dom 내부의 변화를 최소화 시켜 성능을 향상 시켜줌\r\n//component = js and html\r\n// component를 사용해 Js를 통해 html을 동작 가능하게 하고 , 또 component를 통해 반복이 필요한 html code를 줄여줌\r\n// React를 사용하기 위해서는 항상 코드 최상단에  \"import React from \"react\";\"를 삽입해야함\r\n// 외부 코드로 보낼때는 'export default {component.name}'을 삽입해야한다;\r\n// 외부 코드를 받을때는 'import {component.name} from '{component.name}의 위치';'\r\n// component는 jsx의 하나 밖에 없는 커스터마이즈로,<Abcd property = value /> 형식을 띈다.\r\n// 위와 같이 component의 이름의 시작은 대문자로 주고 props : property = value ;를 object 형식으로 자식 component에게 전달가능하다\r\n// 자식component는 해당 props를 'props'로 직접 받거나, 해당 property의 이름 { property } 와 같이 직접 호출도 가능하다. \r\n// <html></html>코드 내에서 Js사용시 {} 필요. ex) {FoodIlike.map( dish => < Test name = {dish.name} />)}\r\n// map은 각 array 의 item들을 object로 반환한다. \r\n// map Recap : React의 모든 각각의 element들은 서로 다를 필요가 있다. 그래서 각 각의 object 내에 key값을 줘 React내부에서 요소들의 차이를 두게한다.\r\n//그렇지 않으면, Warning: Each child in a list should have a unique \"key\" prop. 이러한 고유성을 상실했다는 오류가 발생한다.\r\n// 그래서 만약 component의 props로 자료형이 같은 배열을 가지게 되면 error가 발생.그래서 각 각의 object 내에 key값을 줘 React내부에서 요소들의 차이를 두게한다.\r\n// npm i proptypes 후 import Proptypes from \"prop-types\";\r\n// propTypes를 통해 props의 promising을 걸어 filtering 가능.\r\n//예시) Test.propTypes = { rating  : PropTypes.number.isRequired };\r\n//React는 자동적으로 모든 class component의 render() method를 실행한다.\r\n//그래서 class component는 render method 내에 기능을 추가해야한다\r\n//class component를 function component 대신 사용하는 이유는 state 때문이다\r\n//class {className} extends React.Component를 해줘야React.Component의 메서드를 사용할 수 있음.\r\n//state는 객체형태로 존재하며, class component의 데이터를 동적으로 바꾸기 위해 사용함\r\n//setState()를 호출할 때마다 react는 새로운 state와 함께 render() function을 호출한다.\r\n// 즉 다시말해, setState()를 사용해 state값을 호출하지 않으면 state값은 바뀌지 않는다.\r\n//Using: this.setState((current) => ({ count: current.count + 1 })); you can always be sure you will get the 'current' state\r\n//axios.get은 느리기 때문에 비동기적(async)으로 처리 해 줘야함\r\n// await를 통해 axios.get 으로 다 받아오면 그 후를 처리하는 비동기적 방식으로 실행","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n\r\n    componentDidMount(){\r\n        const { history , location } = this.props;\r\n        if( location.state === undefined ){\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { location } = this.props;\r\n         if( location.state){\r\n            return (\r\n                <div>\r\n                    <span>{location.state.title}</span>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Navigation.css\";\r\nfunction Navigation(){\r\n    return <div className=\"nav\">\r\n        <Link to = \"/\">Home</Link>\r\n    </div>\r\n}\r\nexport default Navigation;\r\n\r\n\r\n//<a href= \"somewhere\" >somewhere</a> 을 안쓰는 이유는?\r\n// 클릭시 매번 새로고침이 되면서 리액트가 죽게된다.\r\n// 그래서 Link 를  사용할 수 있는데.. import { Link } from \"react-router-dom\"\r\n// Link는 반드시 Router 내에 있어야 한다\r\n// Link는 Route를 통해서 Route의 지정 component로 data를 보낼수 있다. to = ~~ 를 사용해서 \r\n","import React from \"react\";\nimport { HashRouter , Route } from \"react-router-dom\"; \nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\"\nimport Navigation from \"./components/Navigation\"\nfunction App(){\n  return <HashRouter>\n    <Navigation />\n    <Route path = \"/\" component = {Home}  exact = {true} ></Route>\n    <Route path = \"/movie/:id\" component = {Detail}></Route>\n  </HashRouter>\n}\n\nexport default App\n\n\n// exact = {true} 는 오로지 현재 고유의 path 값을 가졌을 때만 component를 rendering 한다\n//Navigation은 path 값으로 이동할 Route를 찾는다.\n// 모든 Router 는 기본 props 를 가진다.(history,location,match ...)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />,document.getElementById('root')); // 해당 React component를 html DOM으로 전달 하는법 ReactDOM.render({Component.name},DOM);\n\n//React실행전, (npm,node.js),npx,git 이 설치 되어있어야함\n//npx는 npm의 실행을 직접적이고 쉽게 해주는 실행파일?\n//작업 dir 내에서 ' npx create-react-app {dir.name} ' 으로 React 앱 환경구축 실행\n//작업 dir 내 터미널에서 ' npm start ' 로 localHost or wifi-network주소값을 얻어 앱 실행을 가능하게한다.\n"],"sourceRoot":""}